// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	apis "github.com/kubean-io/kubean-api/apis"
)

// SpecApplyConfiguration represents a declarative configuration of the Spec type for use
// with apply.
type SpecApplyConfiguration struct {
	HostsConfRef *apis.DataRef `json:"hostsConfRef,omitempty"`
	VarsConfRef  *apis.DataRef `json:"varsConfRef,omitempty"`
	KubeConfRef  *apis.DataRef `json:"kubeconfRef,omitempty"`
	SSHAuthRef   *apis.DataRef `json:"sshAuthRef,omitempty"`
	PreCheckRef  *apis.DataRef `json:"preCheckRef,omitempty"`
}

// SpecApplyConfiguration constructs a declarative configuration of the Spec type for use with
// apply.
func Spec() *SpecApplyConfiguration {
	return &SpecApplyConfiguration{}
}

// WithHostsConfRef sets the HostsConfRef field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the HostsConfRef field is set to the value of the last call.
func (b *SpecApplyConfiguration) WithHostsConfRef(value apis.DataRef) *SpecApplyConfiguration {
	b.HostsConfRef = &value
	return b
}

// WithVarsConfRef sets the VarsConfRef field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the VarsConfRef field is set to the value of the last call.
func (b *SpecApplyConfiguration) WithVarsConfRef(value apis.DataRef) *SpecApplyConfiguration {
	b.VarsConfRef = &value
	return b
}

// WithKubeConfRef sets the KubeConfRef field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the KubeConfRef field is set to the value of the last call.
func (b *SpecApplyConfiguration) WithKubeConfRef(value apis.DataRef) *SpecApplyConfiguration {
	b.KubeConfRef = &value
	return b
}

// WithSSHAuthRef sets the SSHAuthRef field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the SSHAuthRef field is set to the value of the last call.
func (b *SpecApplyConfiguration) WithSSHAuthRef(value apis.DataRef) *SpecApplyConfiguration {
	b.SSHAuthRef = &value
	return b
}

// WithPreCheckRef sets the PreCheckRef field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the PreCheckRef field is set to the value of the last call.
func (b *SpecApplyConfiguration) WithPreCheckRef(value apis.DataRef) *SpecApplyConfiguration {
	b.PreCheckRef = &value
	return b
}
