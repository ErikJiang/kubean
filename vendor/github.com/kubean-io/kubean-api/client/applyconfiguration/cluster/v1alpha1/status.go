// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// StatusApplyConfiguration represents a declarative configuration of the Status type for use
// with apply.
type StatusApplyConfiguration struct {
	Conditions []ClusterConditionApplyConfiguration `json:"conditions,omitempty"`
}

// StatusApplyConfiguration constructs a declarative configuration of the Status type for use with
// apply.
func Status() *StatusApplyConfiguration {
	return &StatusApplyConfiguration{}
}

// WithConditions adds the given value to the Conditions field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Conditions field.
func (b *StatusApplyConfiguration) WithConditions(values ...*ClusterConditionApplyConfiguration) *StatusApplyConfiguration {
	for i := range values {
		if values[i] == nil {
			panic("nil value passed to WithConditions")
		}
		b.Conditions = append(b.Conditions, *values[i])
	}
	return b
}
