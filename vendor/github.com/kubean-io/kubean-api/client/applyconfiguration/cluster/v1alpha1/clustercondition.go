// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	clusterv1alpha1 "github.com/kubean-io/kubean-api/apis/cluster/v1alpha1"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// ClusterConditionApplyConfiguration represents a declarative configuration of the ClusterCondition type for use
// with apply.
type ClusterConditionApplyConfiguration struct {
	ClusterOps *string                               `json:"clusterOps,omitempty"`
	Status     *clusterv1alpha1.ClusterConditionType `json:"status,omitempty"`
	StartTime  *v1.Time                              `json:"startTime,omitempty"`
	EndTime    *v1.Time                              `json:"endTime,omitempty"`
}

// ClusterConditionApplyConfiguration constructs a declarative configuration of the ClusterCondition type for use with
// apply.
func ClusterCondition() *ClusterConditionApplyConfiguration {
	return &ClusterConditionApplyConfiguration{}
}

// WithClusterOps sets the ClusterOps field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ClusterOps field is set to the value of the last call.
func (b *ClusterConditionApplyConfiguration) WithClusterOps(value string) *ClusterConditionApplyConfiguration {
	b.ClusterOps = &value
	return b
}

// WithStatus sets the Status field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Status field is set to the value of the last call.
func (b *ClusterConditionApplyConfiguration) WithStatus(value clusterv1alpha1.ClusterConditionType) *ClusterConditionApplyConfiguration {
	b.Status = &value
	return b
}

// WithStartTime sets the StartTime field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the StartTime field is set to the value of the last call.
func (b *ClusterConditionApplyConfiguration) WithStartTime(value v1.Time) *ClusterConditionApplyConfiguration {
	b.StartTime = &value
	return b
}

// WithEndTime sets the EndTime field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the EndTime field is set to the value of the last call.
func (b *ClusterConditionApplyConfiguration) WithEndTime(value v1.Time) *ClusterConditionApplyConfiguration {
	b.EndTime = &value
	return b
}
