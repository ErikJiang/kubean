// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	apis "github.com/kubean-io/kubean-api/apis"
	clusteroperationv1alpha1 "github.com/kubean-io/kubean-api/apis/clusteroperation/v1alpha1"
)

// HookActionApplyConfiguration represents a declarative configuration of the HookAction type for use
// with apply.
type HookActionApplyConfiguration struct {
	ActionType      *clusteroperationv1alpha1.ActionType   `json:"actionType,omitempty"`
	Action          *string                                `json:"action,omitempty"`
	ActionSource    *clusteroperationv1alpha1.ActionSource `json:"actionSource,omitempty"`
	ActionSourceRef *apis.DataRef                          `json:"actionSourceRef,omitempty"`
	ExtraArgs       *string                                `json:"extraArgs,omitempty"`
}

// HookActionApplyConfiguration constructs a declarative configuration of the HookAction type for use with
// apply.
func HookAction() *HookActionApplyConfiguration {
	return &HookActionApplyConfiguration{}
}

// WithActionType sets the ActionType field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ActionType field is set to the value of the last call.
func (b *HookActionApplyConfiguration) WithActionType(value clusteroperationv1alpha1.ActionType) *HookActionApplyConfiguration {
	b.ActionType = &value
	return b
}

// WithAction sets the Action field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Action field is set to the value of the last call.
func (b *HookActionApplyConfiguration) WithAction(value string) *HookActionApplyConfiguration {
	b.Action = &value
	return b
}

// WithActionSource sets the ActionSource field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ActionSource field is set to the value of the last call.
func (b *HookActionApplyConfiguration) WithActionSource(value clusteroperationv1alpha1.ActionSource) *HookActionApplyConfiguration {
	b.ActionSource = &value
	return b
}

// WithActionSourceRef sets the ActionSourceRef field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ActionSourceRef field is set to the value of the last call.
func (b *HookActionApplyConfiguration) WithActionSourceRef(value apis.DataRef) *HookActionApplyConfiguration {
	b.ActionSourceRef = &value
	return b
}

// WithExtraArgs sets the ExtraArgs field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ExtraArgs field is set to the value of the last call.
func (b *HookActionApplyConfiguration) WithExtraArgs(value string) *HookActionApplyConfiguration {
	b.ExtraArgs = &value
	return b
}
