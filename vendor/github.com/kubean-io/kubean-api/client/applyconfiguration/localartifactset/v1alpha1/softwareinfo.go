// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// SoftwareInfoApplyConfiguration represents a declarative configuration of the SoftwareInfo type for use
// with apply.
type SoftwareInfoApplyConfiguration struct {
	Name         *string  `json:"name,omitempty"`
	VersionRange []string `json:"versionRange,omitempty"`
}

// SoftwareInfoApplyConfiguration constructs a declarative configuration of the SoftwareInfo type for use with
// apply.
func SoftwareInfo() *SoftwareInfoApplyConfiguration {
	return &SoftwareInfoApplyConfiguration{}
}

// WithName sets the Name field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Name field is set to the value of the last call.
func (b *SoftwareInfoApplyConfiguration) WithName(value string) *SoftwareInfoApplyConfiguration {
	b.Name = &value
	return b
}

// WithVersionRange adds the given value to the VersionRange field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the VersionRange field.
func (b *SoftwareInfoApplyConfiguration) WithVersionRange(values ...string) *SoftwareInfoApplyConfiguration {
	for i := range values {
		b.VersionRange = append(b.VersionRange, values[i])
	}
	return b
}
