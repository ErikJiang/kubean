// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1alpha1 "github.com/kubean-io/kubean-api/apis/cluster/v1alpha1"
	clusterv1alpha1 "github.com/kubean-io/kubean-api/client/applyconfiguration/cluster/v1alpha1"
	typedclusterv1alpha1 "github.com/kubean-io/kubean-api/client/clientset/versioned/typed/cluster/v1alpha1"
	gentype "k8s.io/client-go/gentype"
)

// fakeClusters implements ClusterInterface
type fakeClusters struct {
	*gentype.FakeClientWithListAndApply[*v1alpha1.Cluster, *v1alpha1.ClusterList, *clusterv1alpha1.ClusterApplyConfiguration]
	Fake *FakeClusterV1alpha1
}

func newFakeClusters(fake *FakeClusterV1alpha1) typedclusterv1alpha1.ClusterInterface {
	return &fakeClusters{
		gentype.NewFakeClientWithListAndApply[*v1alpha1.Cluster, *v1alpha1.ClusterList, *clusterv1alpha1.ClusterApplyConfiguration](
			fake.Fake,
			"",
			v1alpha1.SchemeGroupVersion.WithResource("clusters"),
			v1alpha1.SchemeGroupVersion.WithKind("Cluster"),
			func() *v1alpha1.Cluster { return &v1alpha1.Cluster{} },
			func() *v1alpha1.ClusterList { return &v1alpha1.ClusterList{} },
			func(dst, src *v1alpha1.ClusterList) { dst.ListMeta = src.ListMeta },
			func(list *v1alpha1.ClusterList) []*v1alpha1.Cluster { return gentype.ToPointerSlice(list.Items) },
			func(list *v1alpha1.ClusterList, items []*v1alpha1.Cluster) {
				list.Items = gentype.FromPointerSlice(items)
			},
		),
		fake,
	}
}
