name: save release notes

on: [workflow_call, workflow_dispatch]
jobs:
  save-release-notes-to-file:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v5
      with:
        fetch-depth: 0
        ref: main

    - name: Extract  latest tag
      id: latest_tag
      run: |
        echo tag=${GITHUB_REF#refs/*/} >> $GITHUB_OUTPUT

    - name: Create release notes markdown
      run: |
        # 1. get pre-release id
        pre_release_id=$(curl -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/repos/${GITHUB_REPOSITORY}/releases | yq '.[] | select(.prerelease == true) | .id')
        echo "pre_release_id: ${pre_release_id}"

        # 2. update release status from pre-release to latest-release
        curl -L \
          -X PATCH \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          https://api.github.com/repos/${GITHUB_REPOSITORY}/releases/${pre_release_id} \
          -d '{"draft":false,"prerelease":false,"make_latest":"true"}'

        # 3. generate release notes content for new release
        latest_tag=${{ steps.latest_tag.outputs.tag }}
        curl \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          https://api.github.com/repos/${GITHUB_REPOSITORY}/releases/tags/${latest_tag} |yq '.body' > docs/overrides/releases/${latest_tag}.md

    - name: Add support list in release notes markdown
      run: |
        latest_tag=${{ steps.latest_tag.outputs.tag }}
        bash ./hack/autoversion.sh ${latest_tag}
        
    - name: Add support list in release body
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        body_path: docs/overrides/releases/${{ steps.latest_tag.outputs.tag }}.md

    - name: Push release notes
      id: push_directory
      uses: cpina/github-action-push-to-another-repository@v1.7.2
      env:
        SSH_DEPLOY_KEY: ${{ secrets.SYNC_RLS_PRIVATE_KEY }}
      with:
        source-directory: .
        destination-github-username: ${{ github.repository_owner }}
        destination-repository-name: kubean
        user-email: kubean-robot@kubean-io
        commit-message: See ORIGIN_COMMIT from $GITHUB_REF
        target-branch: main
