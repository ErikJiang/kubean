// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1alpha1 "github.com/kubean-io/kubean-api/apis/manifest/v1alpha1"
	manifestv1alpha1 "github.com/kubean-io/kubean-api/client/applyconfiguration/manifest/v1alpha1"
	typedmanifestv1alpha1 "github.com/kubean-io/kubean-api/client/clientset/versioned/typed/manifest/v1alpha1"
	gentype "k8s.io/client-go/gentype"
)

// fakeManifests implements ManifestInterface
type fakeManifests struct {
	*gentype.FakeClientWithListAndApply[*v1alpha1.Manifest, *v1alpha1.ManifestList, *manifestv1alpha1.ManifestApplyConfiguration]
	Fake *FakeManifestV1alpha1
}

func newFakeManifests(fake *FakeManifestV1alpha1) typedmanifestv1alpha1.ManifestInterface {
	return &fakeManifests{
		gentype.NewFakeClientWithListAndApply[*v1alpha1.Manifest, *v1alpha1.ManifestList, *manifestv1alpha1.ManifestApplyConfiguration](
			fake.Fake,
			"",
			v1alpha1.SchemeGroupVersion.WithResource("manifests"),
			v1alpha1.SchemeGroupVersion.WithKind("Manifest"),
			func() *v1alpha1.Manifest { return &v1alpha1.Manifest{} },
			func() *v1alpha1.ManifestList { return &v1alpha1.ManifestList{} },
			func(dst, src *v1alpha1.ManifestList) { dst.ListMeta = src.ListMeta },
			func(list *v1alpha1.ManifestList) []*v1alpha1.Manifest { return gentype.ToPointerSlice(list.Items) },
			func(list *v1alpha1.ManifestList, items []*v1alpha1.Manifest) {
				list.Items = gentype.FromPointerSlice(items)
			},
		),
		fake,
	}
}
